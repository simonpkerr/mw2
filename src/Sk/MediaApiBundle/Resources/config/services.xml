<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <!--mediaapi params-->
        <parameter key="media_provider_api.class">Sk\MediaApiBundle\MediaProviderApi\MediaProviderFacade</parameter>
        <parameter key="media_provider_api.debug_mode" />
                
        <!--amazon params-->
        <parameter key="amazon_provider.class">Sk\MediaApiBundle\MediaProviderApi\AmazonProvider</parameter>
        <parameter key="amazon_provider.access_params" type="collection" >
            <parameter key="amazon_public_key" />
            <parameter key="amazon_uk_private_key" />
            <parameter key="amazon_associate_tag" />
        </parameter>
        <parameter key="amazon_provider.amazon_signed_request.class" />

        <!--google params-->
        <parameter key="google_provider.class">Google_Client</parameter>
        <parameter key="google_provider.gdata_key" />
        <parameter key="google_provider.gdata_app_name" />
                    
        <!--youtube params-->
        <parameter key="youtube_provider.class">Sk\MediaApiBundle\MediaProviderApi\YouTubeProvider</parameter>
        <parameter key="youtube_provider.google_service_youtube.class" />
        
        <!--wikimedia params-->
        <parameter key="wikimedia_provider.class">Sk\MediaApiBundle\MediaProviderApi\WikiMediaProvider</parameter>
        <parameter key="wikimedia_provider.wikimedia_request.class" />
        <parameter key="wikimedia_provider.access_params" type="collection" >
            <parameter key="wikimedia_endpoint" />
            <parameter key="wikimedia_user_agent" />
        </parameter>  
    </parameters>
    
    <services>
        <service id="sk_media_api.media_provider_api" class="%media_provider_api.class%">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <!--<argument type="service" id="session" />-->
            <argument type="collection" id="providers">
                <argument type="service" id="amazon_provider" key="amazon_provider" />
                <argument type="service" id="youtube_provider" key="youtube_provider" />
                <argument type="service" id="wikimedia_provider" key="wikimedia_provider" />
            </argument>
            <argument id="sonata.cache.apc" type="service"  />
            <argument>%media_provider_api.debug_mode%</argument>
        </service>
        
        <!--wikimedia service-->
        <service id="wikimedia_request" class="%wikimedia_provider.wikimedia_request.class%" public="false" />
        <service id="wikimedia_provider" class="%wikimedia_provider.class%" public="false">
            <argument>%wikimedia_provider.access_params%</argument>
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument id="wikimedia_request" type="service" />
        </service>
        
        <!--amazon services-->
        <service id="amazon_signed_request" class="%amazon_provider.amazon_signed_request.class%" public="false" />
        <service id="amazon_provider" class="%amazon_provider.class%" public="false">
            <argument>%amazon_provider.access_params%</argument>
            <argument id="amazon_signed_request" type="service" />
        </service>
        
        <!--google services-->
        <service id="google_client" class="%google_provider.class%" public="false">
            <call method="setDeveloperKey">
                <argument>%google_provider.gdata_key%</argument>
            </call>
            <call method="setApplicationName">
                <argument>%google_provider.gdata_app_name%</argument>
            </call>
        </service>
        
        <!--youtube services-->
        <service id="google_service_youtube" class="%youtube_provider.google_service_youtube.class%" public="false">
            <argument type="service" id="google_client" />
        </service>
        
        <service id="youtube_provider" class="%youtube_provider.class%" public="false">
            <argument type="service" on-invalid="ignore" id="google_service_youtube" />
        </service>
         
    </services>
</container>

